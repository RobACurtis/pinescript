// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © djdrob

//@version=5
strategy('Tweezer Lyfe', overlay=true)

goLong = input.bool(true, title="Go Long")
goShort = input.bool(true, title="Go Short")
maxRisk = input.int(7, title="Max Risk in points")

big_candle_2_close = request.security(syminfo.tickerid, "55", close[2])
big_candle_1_close = request.security(syminfo.tickerid, "55", close[1])
big_candle_open = request.security(syminfo.tickerid, "55", open)

big_candle_2_open = request.security(syminfo.tickerid, "55", open[2])
big_candle_1_open = request.security(syminfo.tickerid, "55", open[1])
big_candle_close = request.security(syminfo.tickerid, "55", open)

// Bollinger Bands
[middle, upper, lower] = ta.bb(close, 20, 2)
plot(upper, color=color.rgb(4, 0, 255), title="upper")
plot(middle, color=color.rgb(4, 0, 255), title="middle")
plot(lower, color=color.rgb(4, 0, 255), title="lower")

rsi1 = ta.rsi(close, 15)
kRed = ta.sma(ta.stoch(rsi1, rsi1, rsi1, 20), 4)
dGreen = ta.sma(kRed, 4)

atr = ta.atr(20)
stopPriceLong = ta.lowest(1) - atr
stopPriceShort = ta.highest(1) + atr

bullishTweezer() =>
    prevCandleBearish = close[1] < open[1] and close[1] <= lower 
    isCloseBullish = close >= hl2[1] and open < lower
    checkRisk = (high - stopPriceLong) <= maxRisk
    bigs = big_candle_1_close > big_candle_2_close or open > big_candle_1_close
    rsi = ta.crossover(kRed, dGreen) or (kRed < dGreen and rsi1 < 40)
    bullishTweezer = prevCandleBearish and isCloseBullish and checkRisk and rsi and bigs
    bullishTweezer

bearishTweezer() =>
    prevCandleBullish = close[1] > open[1]
    isCloseBearish = close <= hlc3[1] and open >= upper and hl2 >= upper
    checkRisk = (high[1] - stopPriceShort) <= maxRisk
    bigs = big_candle_1_close < big_candle_2_open or big_candle_open < big_candle_2_close
    rsi = ta.crossover(dGreen, kRed) or (kRed > dGreen and rsi1 > 80)
    bearishTweezer = prevCandleBullish and isCloseBearish and checkRisk and rsi and bigs
    bearishTweezer

tweezer_strategy() =>
    [bullishTweezer(), bearishTweezer()]

[buy, sell] = tweezer_strategy()

// order entry
if buy and goLong
    strategy.entry("Go Long", strategy.long)
    strategy.exit("Stop Loss", stop=stopPriceLong)

if sell and goShort
    strategy.entry('goshort', strategy.short)
    strategy.exit("Stop Loss", stop=stopPriceShort)

if (strategy.position_size > 0)
    if (close >= (upper + middle) / 2)
        strategy.close_all('exit long')
    
if (strategy.position_size < 0)
    if (close <= (lower + middle) / 2)
        strategy.close_all('exit short')
